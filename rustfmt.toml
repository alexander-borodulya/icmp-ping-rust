# Specifies which edition is used by the parser.
edition = "2021"

# Controls the strategy for grouping sets of consecutive imports. Imports may contain newlines between imports and still be grouped together as a single set, but other statements between imports will result in different grouping sets.
group_imports="One"

# Controls how imports are structured in use statements. Imports will be merged or split to the configured level of granularity.
# Nightly
imports_granularity="Crate"

# Where to put a binary operator when a binary expression goes multiline.
binop_separator="Front"

# Brace style for items
brace_style="SameLineWhere"

# Whether to use colored output or not.
color="Always"

# This option can be used to simplify the management and bulk updates of the granular width configuration settings (fn_call_width, attr_fn_like_width, struct_lit_width, struct_variant_width, array_width, chain_width, single_line_if_else_max_width), that respectively control when formatted constructs are multi-lined/vertical based on width.
use_small_heuristics="Max"

# Maximum width of the args of a function call before falling back to vertical formatting.
fn_call_width=60

# Put single-expression functions on a single line
fn_single_line=false

# Always print the abi for extern items
force_explicit_abi=true

# Use tab characters for indentation, spaces for alignment
hard_tabs=false

# Indent style of imports
imports_indent="Block"

# Item layout inside a imports block
imports_layout="HorizontalVertical"

# Reorder impl items. type and const are put first, then macros and methods.
reorder_impl_items=true

# Reorder import and extern crate statements alphabetically in groups (a group is separated by a newline).
reorder_imports=true

# Reorder mod declarations alphabetically in group.
reorder_modules=true

# Leave a space after the colon.
space_after_colon=true

# Number of spaces per tab
tab_spaces=4

# How to handle trailing commas for lists
trailing_comma="Vertical"

# Use field initialize shorthand if possible.
use_field_init_shorthand=true

# Forces the where clause to be laid out on a single line.
where_single_line=false
